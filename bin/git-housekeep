#!/bin/bash
#
# Perform git housekeeping.
#
# Sami Kerola <kerolasa@iki.fi>

# Uncomment if you need to debug.
#set -x
# Uncomment if you want to get rid of all output.
#exec > /dev/null 2>&1

# Default settings, do not touch.
SCRIPT_INVOCATION_SHORT_NAME=$(basename ${0})
set -e # exit on errors
# trap ERR is bashism, do not change shebang!
trap 'echo "${SCRIPT_INVOCATION_SHORT_NAME}: exit on error"; exit 1' ERR
set -u # disallow usage of unset variables
set -o pipefail	# make pipe writer failure to cause exit on error

msg() {
	echo "${SCRIPT_INVOCATION_SHORT_NAME}: ${@}"
}

usage() {
	echo "Usage:"
	echo " ${0} [-a] [-h]"
	echo ""
	echo " -a   perform expensive repack"
	echo " -r   prune remote branches"
	echo " -h   display this help and exit"
	exit ${1}
}

ALL=false
REMOTE=false
while getopts arh OPTIONS; do
	case ${OPTIONS} in
		a)
			ALL=true
			;;
		h)
			usage 0
			;;
		r)
			REMOTE=true
			;;
		*)
			usage 1
			;;
	esac
done

if ${REMOTE}; then
	for I in $(git remote); do
		echo "pruning: ${I}"
		git remote prune ${I}
	done
fi
git reflog expire --all
git prune --expire=now
git gc --prune=now
if ${ALL}; then
	git repack -a -f -F -d --window=250 --depth=250
else
	git repack -A -d
fi

exit 0
# EOF
